.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AGO 1"
.TH AGO 1 "2017-09-10" "Alpha" "opam.ocaml.org"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ago \- compute number of days between two calendar dates
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBago\fR \fIyyyy-mm-dd\fR [\fIyyyy-mm-dd\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBago\fR computes the difference in days between two calendar dates provided
as arguments. If just one date is given, the current date is taken as the
second one.  \fBago\fR emits the result to standard output.
.PP
The difference in days is negative if the first date is before the second
date (or the current date, if no second date is given). Conversely, if the
first date is after the second, the difference is positive.
.SH "DATE FORMAT"
.IX Header "DATE FORMAT"
A date can be given in the following formats:
.ie n .IP "\fIyyyy-mm-dd\fR as in ""2014\-12\-28""" 4
.el .IP "\fIyyyy-mm-dd\fR as in \f(CW2014\-12\-28\fR" 4
.IX Item "yyyy-mm-dd as in 2014-12-28"
Day and month must be designated by two digits.
.ie n .IP "\fIdd.mm.yyyy\fR as in 28.12.2014 or 3.1.2010" 4
.el .IP "\fIdd.mm.yyyy\fR as in \f(CW28.12.2014\fR or \f(CW3.1.2010\fR" 4
.IX Item "dd.mm.yyyy as in 28.12.2014 or 3.1.2010"
Day and month may be designate by one or two digits.
.ie n .IP """today"" or ""now""." 4
.el .IP "\f(CWtoday\fR or \f(CWnow\fR." 4
.IX Item "today or now."
This designates the current local date.
.ie n .IP """epoch""" 4
.el .IP "\f(CWepoch\fR" 4
.IX Item "epoch"
The \f(CW\*(C`epoch\*(C'\fR designates January 1st, 1 (0001\-01\-01). This can be useful for
enumerating dates.
.SH "EXIT CODE AND DIAGNOSTICS"
.IX Header "EXIT CODE AND DIAGNOSTICS"
The exit code is zero for success and positive in the case of errors. Error
messages are emitted to standard error.
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
The date must range between 0001\-01\-01 and 9999\-12\-31. The Gregorian
calendar was introduced 1582 and hence dates prior to its introduction are
an extrapolation.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdate\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Christian Lindig <lindig@gmail.com>. The source code is
available from <http://github.com/lindig/ocaml\-ago>.
.SH "LICENSE"
.IX Header "LICENSE"
This program is licensed under the \s-1BSD\-2\s0 Open Source
License.
